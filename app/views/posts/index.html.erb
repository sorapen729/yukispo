<!-- Hero -->
<section class="min-h-[60vh] flex flex-col items-center justify-center text-center px-6 bg-gradient-to-br from-[#0d2b23] to-[#1e4832] text-white">
  <h1 class="text-4xl md:text-5xl font-extrabold tracking-tight">ゆきスポ</h1>
  <p class="mt-4 text-base md:text-lg opacity-90">
    スキー場までの最適ルートをサクッと検索。<br class="hidden md:block" />
    出発地と目的地を選んで、すぐに滑りに行こう⛷️
  </p>

  <!-- 検索カード -->
  <div class="w-full max-w-2xl mt-8">
    <div class="bg-white text-slate-900 rounded-2xl shadow-xl p-4 md:p-6">
      <h2 class="text-lg font-semibold mb-3">ルート検索</h2>

      <%= form_with url: route_search_path, method: :get, local: true, id: "route-search-form" do |f| %>
        <!-- 出発地切り替え -->
        <fieldset class="mb-4">
          <legend class="sr-only">出発地の指定方法</legend>
          <div class="flex gap-3 text-sm">
            <label class="inline-flex items-center gap-2">
              <input type="radio" name="origin_mode" value="current_location" class="accent-emerald-600" checked>
              現在地から
            </label>
            <label class="inline-flex items-center gap-2">
              <input type="radio" name="origin_mode" value="custom_address" class="accent-emerald-600">
              住所を入力
            </label>
          </div>
        </fieldset>

        <!-- 出発地入力＋現在地ボタン -->
        <div class="grid grid-cols-1 md:grid-cols-[1fr_auto] gap-3 mb-4">
          <div>
            <label for="origin" class="block text-xs font-medium text-slate-600 mb-1">出発地</label>
            <input id="origin" name="origin" type="text" placeholder="例）新宿駅 / 自宅"
                   class="w-full rounded-xl border border-slate-300 px-3 py-2"
                   disabled>
            <!-- 緯度経度（現在地使用時） -->
            <input type="hidden" name="origin_lat" id="origin_lat">
            <input type="hidden" name="origin_lng" id="origin_lng">
          </div>
          <button type="button" id="btn-use-geolocation"
                  class="h-10 md:h-auto md:self-end rounded-xl px-4 py-2 bg-emerald-600 hover:bg-emerald-700 text-white transition">
            現在地を取得
          </button>
        </div>

        <!-- 目的地（スキー場） -->
        <div class="mb-4">
          <label for="destination" class="block text-xs font-medium text-slate-600 mb-1">目的地（スキー場）</label>
          <input id="destination" name="destination" type="text" placeholder="例）苗場スキー場 / 白馬八方尾根"
                 class="w-full rounded-xl border border-slate-300 px-3 py-2">
        </div>

        <!-- 交通手段 -->
        <div class="mb-5">
          <label for="travel_mode" class="block text-xs font-medium text-slate-600 mb-1">交通手段</label>
          <select id="travel_mode" name="travel_mode" class="w-full rounded-xl border border-slate-300 px-3 py-2">
            <option value="driving">自動車</option>
            <option value="transit">公共交通機関</option>
            <option value="walking">徒歩</option>
          </select>
        </div>

        <button type="submit"
                class="w-full rounded-xl bg-emerald-600 hover:bg-emerald-700 text-white font-semibold py-3 transition">
          ルートを検索
        </button>
      <% end %>

      <p id="geo-msg" class="text-xs text-slate-500 mt-2"></p>
    </div>
  </div>

  <div class="mt-6 text-xs opacity-80">※ 位置情報はブラウザの許可が必要です</div>
</section>

<!-- 人気のタグ -->
<section class="py-10 px-6 max-w-6xl mx-auto">
  <h3 class="text-xl font-bold mb-4">人気のタグ</h3>
  <% tags = @tags.presence || [
      { name: "家族向け" },
      { name: "初心者向け" },
      { name: "温泉近い" },
      { name: "雪質◎" },
      { name: "ナイター有り" },
      { name: "公共交通OK" }
  ] %>

  <div class="flex flex-wrap gap-2">
    <% tags.each do |t| %>
      <a href="#"
        class="inline-flex items-center rounded-full border border-emerald-200 px-3 py-1 text-sm hover:bg-emerald-50">
      # <%= t.respond_to?(:name) ? t.name : t[:name] %>
      </a>
    <% end %>
  </div>
</section>

<!-- 注目のスキー場（ダミー or 実データ） -->
<section class="pb-16 px-6 max-w-6xl mx-auto">
  <h3 class="text-xl font-bold mb-4">注目のスキー場</h3>
<% resorts = @featured_resorts.presence || [
  { name: "苗場スキー場", address: "新潟", url: "#" },
  { name: "白馬八方尾根", address: "長野", url: "#" },
  { name: "丸沼高原",   address: "群馬", url: "#" },
  { name: "蔵王温泉",   address: "山形", url: "#" },
  { name: "安比高原",   address: "岩手", url: "#" },
  { name: "ニセコグラン・ヒラフ", address: "北海道", url: "#" }
] %>

<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
  <% resorts.each do |r| %>
    <% name    = r.respond_to?(:name)    ? r.name    : r[:name] %>
    <% address = r.respond_to?(:address) ? r.address : r[:address] %>
    <% url     = r.respond_to?(:url)     ? r.url     : r[:url] %>

    <a href="<%= url %>" class="block rounded-2xl border border-slate-200 p-4 hover:shadow-md transition">
      <div class="text-base font-semibold"><%= name %></div>
      <div class="text-sm text-slate-500 mt-1"><%= address %></div>
      <div class="mt-3 text-emerald-700 text-sm font-medium">詳細を見る →</div>
    </a>
  <% end %>
</div>

</section>

<!-- 位置情報取得などの簡易スクリプト（Importmap/ESBuild 不問の素のJS） -->
<script>
  (function () {
    const originModeRadios = document.querySelectorAll('input[name="origin_mode"]');
    const originInput      = document.getElementById('origin');
    const geoBtn           = document.getElementById('btn-use-geolocation');
    const msg              = document.getElementById('geo-msg');
    const latHidden        = document.getElementById('origin_lat');
    const lngHidden        = document.getElementById('origin_lng');

    const updateOriginFieldState = () => {
      const mode = document.querySelector('input[name="origin_mode"]:checked')?.value;
      if (mode === 'custom_address') {
        originInput.disabled = false;
        originInput.placeholder = '例）新宿駅 / 自宅';
      } else {
        originInput.value = '';
        originInput.disabled = true;
        originInput.placeholder = '';
      }
    };

    originModeRadios.forEach(r => r.addEventListener('change', updateOriginFieldState));
    updateOriginFieldState();

    geoBtn?.addEventListener('click', () => {
      msg.textContent = '';
      if (!navigator.geolocation) {
        msg.textContent = 'このブラウザでは位置情報がサポートされていません。';
        return;
      }
      geoBtn.disabled = true;

      navigator.geolocation.getCurrentPosition(
        (pos) => {
          const { latitude, longitude } = pos.coords;
          latHidden.value = latitude;
          lngHidden.value = longitude;
          msg.textContent = `現在地を取得しました（${latitude.toFixed(4)}, ${longitude.toFixed(4)}）`;
          geoBtn.disabled = false;
        },
        (err) => {
          msg.textContent = '位置情報の取得に失敗しました。ブラウザの許可設定をご確認ください。';
          geoBtn.disabled = false;
          console.error(err);
        },
        { enableHighAccuracy: true, timeout: 10000, maximumAge: 0 }
      );
    });
  })();
</script>

